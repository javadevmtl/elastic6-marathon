{
  "id": "/es622-master-prod",
  "cmd": "chown -R elasticsearch:elasticsearch /usr/share/elasticsearch && /usr/local/bin/docker-entrypoint.sh",
  "container": {
    "type": "DOCKER",
    "volumes": [
      {
        "containerPath": "/usr/share/elasticsearch/data",
        "hostPath": "data",
        "mode": "RW"
      },
      {
        "persistent": {
          "type": "root",
          "size": 128000,
          "constraints": []
        },
        "mode": "RW",
        "containerPath": "data"
      }
    ],
    "docker": {
      "image": "docker.elastic.co/elasticsearch/elasticsearch-platinum:6.2.2",
      "forcePullImage": true,
      "privileged": false,
      "parameters": [
        { "key": "ulimit", "value": "memlock=-1:-1" },
        { "key": "log-driver", "value": "none" }
      ]
    },
    "portMappings": [
      {
        "containerPort": 9300,
        "labels": {
          "VIP_0": "/es6:9300"
        },
        "name": "es-protocol"
      },
      {
        "containerPort": 9200,
        "hostPort": 0,
        "labels": {
          "VIP_1": "/es6:9200"
        },
        "protocol": "tcp",
        "name": "es-http"
      }
    ]
  },
  "instances": 3,
  "cpus": 1,
  "mem": 6144,
  "env": {
    "CONTAINER_LOGGER_LOGROTATE_MAX_STDOUT_SIZE": "10MB",
    "CONTAINER_LOGGER_LOGROTATE_MAX_STDERR_SIZE": "10MB",
    "ES_JAVA_OPTS": "-Xms3072m -Xmx3072m",
    "bootstrap.memory_lock": "true",
    "cluster.name": "es6-prod",
    "node.name": "master",
    "node.master": "true",
    "node.data": "false",
    "node.ingest": "false",
    "network.host": "0.0.0.0",
    "discovery.zen.minimum_master_nodes": "2",
    "discovery.zen.ping.unicast.hosts": "es6.marathon.l4lb.thisdcos.directory",
    "path.data": "/usr/share/elasticsearch/data",
    "ELASTIC_PASSWORD": "xxxxxx",
    "reindex.remote.whitelist": "xxxxxx"
  },
  "networks": [
    {
      "name": "dcos",
      "mode": "container"
    }
  ],
  "residency": {
    "relaunchEscalationTimeoutSeconds": 10,
    "taskLostBehavior": "WAIT_FOREVER"
  },
  "requirePorts": false,
  "fetch": [],
  "healthChecks": [],
  "constraints": [
    [
      "hostname",
      "UNIQUE"
    ],
    [
      "agent_type",
      "LIKE",
      "elastic"
    ]
  ],
  "upgradeStrategy": {
    "maximumOverCapacity": 0,
    "minimumHealthCapacity": 0.5
  }
}
